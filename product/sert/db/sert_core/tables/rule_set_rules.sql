--liquibase formatted sql

--changeset mipotter:create_table_sert_core.rule_set_rules endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:;
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from all_tables  where owner = upper('${sert_core_schema}') and table_name = 'RULE_SET_RULES';
CREATE TABLE  ${sert_core_schema}.rule_set_rules (
    rule_set_rule_id NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    rule_set_id      NUMBER NOT NULL,
    rule_id          NUMBER NOT NULL,
    created_by       VARCHAR2(250) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION', 'APP_USER'),
                                                      user) NOT NULL,
    created_on       TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL systimestamp NOT NULL,
    updated_by       VARCHAR2(250) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION', 'APP_USER'),
                                                      user),
    updated_on       TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL systimestamp
)
LOGGING;

ALTER TABLE  ${sert_core_schema}.rule_set_rules ADD CONSTRAINT rule_set_rules_pk PRIMARY KEY ( rule_set_rule_id );

ALTER TABLE  ${sert_core_schema}.rule_set_rules ADD CONSTRAINT rule_set_rules_un UNIQUE ( rule_set_id,
                                                                     rule_id );
--rollback drop table ${sert_core_schema}.rule_set_rules;